name: Continuous Integration on Pull Request
on:
  pull_request:
    branches: [staging, main]
  push:
    branches: [staging, main]

jobs:
  Test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Use right version of golang
        uses: actions/setup-go@v2
        with:
          go-version: "^1.19"
      - name: Copy SonarCloud file config
        run: cp ./example.env ./.env
      - name: Execute test
        run: make test/ci
      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      - name: Code Climate Scan
        uses: paambaati/codeclimate-action@v3.0.0
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CODECLIMATE_TOKEN }}
        with:
          coverageLocations: ${{github.workspace}}/coverage.out
      - name: Codacy Scan
        uses: codacy/codacy-coverage-reporter-action@v1
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          force-coverage-parser: go -r coverage.out

  Lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      - name: Use right version of golang
        uses: actions/setup-go@v2
        with:
          go-version: "^1.19"
      - name: Checking lint
        run: go vet *.go

  Build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      - name: Use right version of golang
        uses: actions/setup-go@v2
        with:
          go-version: "^1.19"
      - name: Checking if build
        run: go build -o ./build/server server.go
