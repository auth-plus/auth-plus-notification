name: Continuous Integration on Pull Request
on:
  pull_request:
    branches: [staging, main]
  push:
    branches: [staging, main]

jobs:
  Test:
    runs-on: ubuntu-latest
    env:
      APP_NAME: auth-plus-notification
      APP_PORT: 5001
      GO_ENV: test
      SA_CONTENT: ${{ secrets.FIREBASE_SA_CREDENTIAL }}
      AWS_ACCESS_KEY_ID: YOUR_AKID
      AWS_SECRET_ACCESS_KEY: YOUR_SECRET_KEY
      AWS_SESSION_TOKEN: TOKEN
      GOOGLE_APPLICATION_CREDENTIALS: "/home/runner/work/service-account-file.json"
      GOOGLE_APPLICATION_NAME: ${{ secrets.FIREBASE_PROJECT_ID }}
      MAILGUN_API_KEY: your-mailgun-api-key
      SENDGRID_API_KEY: your-sendgrid-api-key
      ONESIGNAL_API_KEY: your-onesignal-api-key
      TELEGRAM_API_KEY: your-telegram-api-key
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Use right version of golang
        uses: actions/setup-go@v2
        with:
          go-version: "^1.19"
      - name: Create service-account file [TODO:REMOVE]
        run: |
          touch $GOOGLE_APPLICATION_CREDENTIALS
          echo "$SA_CONTENT" > $GOOGLE_APPLICATION_CREDENTIALS
          cat $GOOGLE_APPLICATION_CREDENTIALS
      - name: Execute test
        run: go test ./... -coverpkg=./... -coverprofile=c.out
      - name: Code Climate Scan
        uses: paambaati/codeclimate-action@v3.0.0
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CODECLIMATE_TOKEN }}
        with:
          coverageLocations: ${{github.workspace}}/*.out:gocov
          prefix: auth-plus-notification
      - name: Codacy Scan
        uses: codacy/codacy-coverage-reporter-action@v1
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          force-coverage-parser: go -r c.out
      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  Lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      - name: Run Revive Action by pulling pre-built image
        uses: docker://morphy/revive-action:v2
      - name: Run Revive Action by building from repository
        uses: morphy2k/revive-action@v2

  Build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      - name: Use right version of golang
        uses: actions/setup-go@v2
        with:
          go-version: "^1.19"
      - name: Checking if build
        run: go build -o ./build/server ./cmd/http_server.go
